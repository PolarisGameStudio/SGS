--vip_voice

local _lang = "cn"
local _isExist = false
local _isBaseExist = false
local _isDataExist = false

-- key
local __key_map = {
  id = 1,    --看板娘id-int 
  date_star = 2,    --日期始-int 
  date_end = 3,    --日期末-int 
  vip_level_min = 4,    --vip等级下限-int 
  vip_level_max = 5,    --vip等级上限-int 
  requirement = 6,    --触发条件-int 
  trigger_id = 7,    --触发点-int 
  pay_id = 8,    --充值包id-string 
  value = 9,    --条件类型值-int 
  voice = 10,    --播放语音内容-string 
  replace = 11,    --替换看板娘语音id-string 
  order = 12,    --优先级顺序-int 
  vip_flag = 13,    --vip标记-int 

}

-- key type
local __key_type = {
  id = "int",    --看板娘id-1 
  date_star = "int",    --日期始-2 
  date_end = "int",    --日期末-3 
  vip_level_min = "int",    --vip等级下限-4 
  vip_level_max = "int",    --vip等级上限-5 
  requirement = "int",    --触发条件-6 
  trigger_id = "int",    --触发点-7 
  pay_id = "string",    --充值包id-8 
  value = "int",    --条件类型值-9 
  voice = "string",    --播放语音内容-10 
  replace = "string",    --替换看板娘语音id-11 
  order = "int",    --优先级顺序-12 
  vip_flag = "int",    --vip标记-13 

}


-- data
local vip_voice = {
    version =  1,
    _data = {
        [1] = {1,0,0,0,16,1,1,"0",0,"1,2,3","0",1,0,},
        [2] = {2,0,0,0,16,2,1,"0",0,"4,5","1",1,0,},
        [3] = {3,0,0,0,16,3,1,"0",0,"6","2,1",1,0,},
        [4] = {4,0,0,0,16,4,2,"10155|10143|10156",0,"7","0",0,0,},
        [5] = {5,0,0,0,16,4,2,"10144|10157|10145",0,"8","0",0,0,},
        [6] = {6,0,0,0,16,4,2,"10158|10146",0,"9","0",0,0,},
        [7] = {7,0,0,0,16,4,2,"10023|10024|10025|10026|10027|10028|10029|10030|10031|10032|10033|10034|10035|10036|10037|10038|10039|10040|10041|10042|10043|10044|10045|10046|10047|10048|10049|10050|10051|10052|10053|10054|10055|10056|10058|10060|10061|10062|10063|10064|10065|10066|10067|10068|10069|10070|10080|10081|10089|10090|10091|10092|10093|10094|10095|10096|10098|10099|10100|10101|10102|10103|10104|10105|10106|10107|10108|10117|10118|10119|10120|10121|10122|10123|10124|10125|10126|10127|10128|10129|10130|10131|10132|10133|10134|10135|10136|10137",0,"","0",0,0,},
        [8] = {8,0,0,0,16,4,2,"10021",0,"10","0",0,0,},
        [9] = {9,0,0,0,16,4,2,"10022",0,"11","0",0,0,},
        [10] = {10,0,0,0,16,5,3,"10001|10002|10003|10004|10005|10006|10007|10008|10021|10022|10023|10024|10025|10026|10027|10028|10029|10030|10031|10032|10033|10034|10035|10036|10037|10038|10039|10040|10041|10042|10043|10044|10045|10046|10047|10048|10049|10050|10051|10052|10053|10054|10055|10056|10058|10060|10061|10062|10063|10064|10065|10066|10067|10068|10069|10070|10080|10081|10089|10090|10091|10092|10093|10094|10095|10096|10098|10099|10100|10101|10102|10103|10104|10105|10106|10107|10108|10117|10118|10119|10120|10121|10122|10123|10124|10125|10126|10127|10128|10129|10130|10131|10132|10133|10134|10135|10136|10137|10143|10144|10145|10146|10155|10156|10157|10158",0,"12","0",0,0,},
        [11] = {11,0,0,0,16,6,4,"10143|10144|10145|10155|10156|10157|10158",0,"13,14,15,16","0",0,0,},
        [12] = {12,0,0,0,16,6,4,"10146",0,"17","0",0,0,},
        [13] = {13,0,0,0,16,7,5,"0",7,"18","0",0,0,},
        [14] = {14,0,0,0,16,7,5,"0",20,"19","0",0,0,},
        [15] = {15,0,0,0,16,8,1,"",0,"","0",0,0,},
        [16] = {16,0,0,0,4,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32","0",0,0,},
        [17] = {17,0,0,5,5,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33","0",0,0,},
        [18] = {18,0,0,6,6,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33,34","0",0,0,},
        [19] = {19,0,0,7,7,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35","0",0,0,},
        [20] = {20,0,0,8,8,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36","0",0,0,},
        [21] = {21,0,0,9,9,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37","0",0,0,},
        [22] = {22,0,0,10,10,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38","0",0,0,},
        [23] = {23,0,0,11,11,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39","0",0,0,},
        [24] = {24,0,0,12,12,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40","0",0,0,},
        [25] = {25,0,0,13,13,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41","0",0,0,},
        [26] = {26,0,0,14,14,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42","0",0,0,},
        [27] = {27,0,0,15,15,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43","0",0,0,},
        [28] = {28,0,0,16,16,9,6,"0",0,"20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44","0",0,0,},
        [29] = {29,0,0,5,5,10,6,"0",0,"33","17",0,0,},
        [30] = {30,0,0,6,6,10,6,"0",0,"34","18",0,0,},
        [31] = {31,0,0,7,7,10,6,"0",0,"35","19",0,0,},
        [32] = {32,0,0,8,8,10,6,"0",0,"36","20",0,0,},
        [33] = {33,0,0,9,9,10,6,"0",0,"37","21",0,0,},
        [34] = {34,0,0,10,10,10,6,"0",0,"38","22",0,0,},
        [35] = {35,0,0,11,11,10,6,"0",0,"39","23",0,0,},
        [36] = {36,0,0,12,12,10,6,"0",0,"40","24",0,0,},
        [37] = {37,0,0,13,13,10,6,"0",0,"41","25",0,0,},
        [38] = {38,0,0,14,14,10,6,"0",0,"42","26",0,0,},
        [39] = {39,0,0,15,15,10,6,"0",0,"43","27",0,0,},
        [40] = {40,0,0,16,16,10,6,"0",0,"44","28",0,0,},
        [41] = {41,0,0,0,16,11,7,"0",0,"0","0",0,0,},
        [42] = {42,20210101,20210101,0,16,12,6,"0",0,"53","0",2,0,},
        [43] = {43,20210101,20210110,0,16,9,6,"0",0,"53","16",0,1,},
        [44] = {44,20210214,20210214,0,16,12,6,"0",0,"55","0",2,0,},
        [45] = {45,20210214,20210214,0,16,9,6,"0",0,"55","16",0,1,},
        [46] = {46,20210303,20210303,0,16,12,6,"0",0,"57","0",2,0,},
        [47] = {47,20210303,20210303,0,16,9,6,"0",0,"57","16",0,1,},
        [48] = {48,20210314,20210314,0,16,12,6,"0",0,"58","0",2,0,},
        [49] = {49,20210314,20210314,0,16,9,6,"0",0,"58","16",0,1,},
        [50] = {50,20210320,20210320,0,16,12,6,"0",0,"59","0",2,0,},
        [51] = {51,20210320,20210320,0,16,9,6,"0",0,"59","16",0,1,},
        [52] = {52,20210429,20210429,0,16,12,6,"0",0,"60","0",2,0,},
        [53] = {53,20210429,20210429,0,16,9,6,"0",0,"60","16",0,1,},
        [54] = {54,20210504,20210504,0,16,12,6,"0",0,"61","0",2,0,},
        [55] = {55,20210504,20210504,0,16,9,6,"0",0,"61","16",0,1,},
        [56] = {56,20210505,20210505,0,16,12,6,"0",0,"62","0",2,0,},
        [57] = {57,20210505,20210505,0,16,9,6,"0",0,"62","16",0,1,},
        [58] = {58,20210509,20210509,0,16,12,6,"0",0,"63","0",2,0,},
        [59] = {59,20210509,20210509,0,16,9,6,"0",0,"63","16",0,1,},
        [60] = {60,20210620,20210620,0,16,12,6,"0",0,"64","0",2,0,},
        [61] = {61,20210620,20210620,0,16,9,6,"0",0,"64","16",0,1,},
        [62] = {62,20210707,20210707,0,16,12,6,"0",0,"65","0",2,0,},
        [63] = {63,20210707,20210707,0,16,9,6,"0",0,"65","16",0,1,},
        [64] = {64,20210712,20210712,0,16,12,6,"0",0,"66","0",2,0,},
        [65] = {65,20210712,20210712,0,16,9,6,"0",0,"66","16",0,1,},
        [66] = {66,20210811,20210811,0,16,12,6,"0",0,"67","0",2,0,},
        [67] = {67,20210811,20210811,0,16,9,6,"0",0,"67","16",0,1,},
        [68] = {68,20210813,20210813,0,16,12,6,"0",0,"68","0",2,0,},
        [69] = {69,20210813,20210816,0,16,9,6,"0",0,"68","16",0,1,},
        [70] = {70,20210921,20210921,0,16,12,6,"0",0,"69","0",2,0,},
        [71] = {71,20210921,20210921,0,16,9,6,"0",0,"69","16",0,1,},
        [72] = {72,20210923,20210923,0,16,12,6,"0",0,"70","0",2,0,},
        [73] = {73,20210923,20210923,0,16,9,6,"0",0,"70","16",0,1,},
        [74] = {74,20211004,20211004,0,16,12,6,"0",0,"71","0",2,0,},
        [75] = {75,20211004,20211004,0,16,9,6,"0",0,"71","16",0,1,},
        [76] = {76,20211031,20211031,0,16,12,6,"0",0,"72","0",2,0,},
        [77] = {77,20211031,20211101,0,16,9,6,"0",0,"72","16",0,1,},
        [78] = {78,20211131,20211131,0,16,12,6,"0",0,"73","0",2,0,},
        [79] = {79,20211131,20211131,0,16,9,6,"0",0,"73","16",0,1,},
        [80] = {80,20211225,20211225,0,16,12,6,"0",0,"74","0",2,0,},
        [81] = {81,20211225,20211225,0,16,9,6,"0",0,"74","16",0,1,},
        [82] = {82,20210124,20210124,0,16,12,6,"0",0,"75","0",2,0,},
        [83] = {83,20210124,20210124,0,16,9,6,"0",0,"75","16",0,1,},
        [84] = {84,20210125,20210131,0,16,12,6,"0",0,"76","0",2,0,},
        [85] = {85,20210125,20210131,0,16,9,6,"0",0,"76","16",0,1,},
        [86] = {86,20210208,20210208,0,16,12,6,"0",0,"77","0",2,0,},
        [87] = {87,20210208,20210208,0,16,9,6,"0",0,"77","16",0,1,},
        [88] = {1001,0,0,0,16,14,8,"0",0,"78","0",2,0,},
        [89] = {1002,0,0,0,16,15,9,"0",0,"79","0",2,0,},
    }
}

-- index
local __index_id = {
    [1] = 1,
    [10] = 10,
    [1001] = 88,
    [1002] = 89,
    [11] = 11,
    [12] = 12,
    [13] = 13,
    [14] = 14,
    [15] = 15,
    [16] = 16,
    [17] = 17,
    [18] = 18,
    [19] = 19,
    [2] = 2,
    [20] = 20,
    [21] = 21,
    [22] = 22,
    [23] = 23,
    [24] = 24,
    [25] = 25,
    [26] = 26,
    [27] = 27,
    [28] = 28,
    [29] = 29,
    [3] = 3,
    [30] = 30,
    [31] = 31,
    [32] = 32,
    [33] = 33,
    [34] = 34,
    [35] = 35,
    [36] = 36,
    [37] = 37,
    [38] = 38,
    [39] = 39,
    [4] = 4,
    [40] = 40,
    [41] = 41,
    [42] = 42,
    [43] = 43,
    [44] = 44,
    [45] = 45,
    [46] = 46,
    [47] = 47,
    [48] = 48,
    [49] = 49,
    [5] = 5,
    [50] = 50,
    [51] = 51,
    [52] = 52,
    [53] = 53,
    [54] = 54,
    [55] = 55,
    [56] = 56,
    [57] = 57,
    [58] = 58,
    [59] = 59,
    [6] = 6,
    [60] = 60,
    [61] = 61,
    [62] = 62,
    [63] = 63,
    [64] = 64,
    [65] = 65,
    [66] = 66,
    [67] = 67,
    [68] = 68,
    [69] = 69,
    [7] = 7,
    [70] = 70,
    [71] = 71,
    [72] = 72,
    [73] = 73,
    [74] = 74,
    [75] = 75,
    [76] = 76,
    [77] = 77,
    [78] = 78,
    [79] = 79,
    [8] = 8,
    [80] = 80,
    [81] = 81,
    [82] = 82,
    [83] = 83,
    [84] = 84,
    [85] = 85,
    [86] = 86,
    [87] = 87,
    [9] = 9,

}

-- index mainkey map
local __main_key_map = {
    [1] = 1,
    [10] = 10,
    [88] = 1001,
    [89] = 1002,
    [11] = 11,
    [12] = 12,
    [13] = 13,
    [14] = 14,
    [15] = 15,
    [16] = 16,
    [17] = 17,
    [18] = 18,
    [19] = 19,
    [2] = 2,
    [20] = 20,
    [21] = 21,
    [22] = 22,
    [23] = 23,
    [24] = 24,
    [25] = 25,
    [26] = 26,
    [27] = 27,
    [28] = 28,
    [29] = 29,
    [3] = 3,
    [30] = 30,
    [31] = 31,
    [32] = 32,
    [33] = 33,
    [34] = 34,
    [35] = 35,
    [36] = 36,
    [37] = 37,
    [38] = 38,
    [39] = 39,
    [4] = 4,
    [40] = 40,
    [41] = 41,
    [42] = 42,
    [43] = 43,
    [44] = 44,
    [45] = 45,
    [46] = 46,
    [47] = 47,
    [48] = 48,
    [49] = 49,
    [5] = 5,
    [50] = 50,
    [51] = 51,
    [52] = 52,
    [53] = 53,
    [54] = 54,
    [55] = 55,
    [56] = 56,
    [57] = 57,
    [58] = 58,
    [59] = 59,
    [6] = 6,
    [60] = 60,
    [61] = 61,
    [62] = 62,
    [63] = 63,
    [64] = 64,
    [65] = 65,
    [66] = 66,
    [67] = 67,
    [68] = 68,
    [69] = 69,
    [7] = 7,
    [70] = 70,
    [71] = 71,
    [72] = 72,
    [73] = 73,
    [74] = 74,
    [75] = 75,
    [76] = 76,
    [77] = 77,
    [78] = 78,
    [79] = 79,
    [8] = 8,
    [80] = 80,
    [81] = 81,
    [82] = 82,
    [83] = 83,
    [84] = 84,
    [85] = 85,
    [86] = 86,
    [87] = 87,
    [9] = 9,

}

-- metatable
local mt = { 
    __index = function(t, k) 
        local key_map = t._raw_key_map
        assert(key_map[k], "cannot find " .. k .. " in vip_voice")
        if _lang ~= "cn" and _isDataExist  and t._data_key_map[k] then
            return t._data[t._data_key_map[k]]
        end
        if _lang ~= "cn" and _isExist  and t._lang_key_map[k] then
            return t._lang[t._lang_key_map[k]]
        end
        return t._raw[key_map[k]]
    end
}

-- 
function vip_voice.length()
    return #vip_voice._data
end

-- 
function vip_voice.hasKey(k)
    if __key_map[k] == nil then
        return false
    else
        return true
    end
end

--
function vip_voice.isVersionValid(v)
    if vip_voice.version then
        if v then
            return vip_voice.version <= v
        else
            return false
        end
    else
        return true
    end
end

--
function vip_voice.indexOf(index)
    if index == nil or not vip_voice._data[index] then
        return nil
    end
    if Lang.lang ~= _lang then 
        _lang = Lang.lang
        if Lang.lang ~= "cn" then
            _isDataExist = Lang.isFileExist("app/i18n/".. _lang .."/data/vip_voice.lua")
            _isExist = Lang.isFileExist("app/i18n/".. _lang .."/config/vip_voice.lua")
            _isBaseExist =  Lang.isFileExist("app/i18n/".. _lang .."/base/vip_voice.lua")

            if _isDataExist then
                local table = require( "app.i18n.".. _lang ..".data." .. "vip_voice" )
                _isDataExist = vip_voice.isVersionValid(table.version)
            end
            if _isBaseExist then
                local table = require( "app.i18n.".. _lang ..".base." .. "vip_voice" )
                _isBaseExist = vip_voice.isVersionValid(table.version)
            end
            if _isExist then
                local table = require( "app.i18n.".. _lang ..".config." .. "vip_voice" )
                _isExist = vip_voice.isVersionValid(table.version)
            end
        end
    end
    local config = {_raw = nil,_raw_key_map = __key_map,_lang = nil,_lang_key_map = nil,_data = nil,_data_key_map = nil}
    if _lang ~= "cn" and _isDataExist then
        local table = require( "app.i18n.".. _lang ..".data." .. "vip_voice" )
        local main_key = __main_key_map[index]
		local index_key = "__index_id"
        local data_index = table[index_key][main_key]
        config._data = table._data[data_index]
        config._data_key_map = table.__key_map
    end

    if _lang ~= "cn" and _isExist then
        local table = require( "app.i18n.".. _lang ..".config." .. "vip_voice" )
        local main_key = __main_key_map[index]
		local index_key = "__index_id"
        local lang_index = table[index_key][main_key]
        config._lang = table._data[lang_index]
        config._lang_key_map = table.__key_map
    end
    config._raw = vip_voice._data[index]
    if _lang ~= "cn" and _isBaseExist then
        local table_base = require( "app.i18n.".. _lang ..".base." .. "vip_voice" )
        config._raw = table_base._data[index] 
    end
    return setmetatable(config, mt)
end

--
function vip_voice.get(id)
    
    return vip_voice.indexOf(__index_id[id])
        
end

--
function vip_voice.set(id, key, value)
    local record = vip_voice.get(id)
    if record then
        if _lang ~= "cn" and _isDataExist then
            local keyIndex =  record._data_key_map[key]
            if keyIndex then
                record._data[keyIndex] = value
                return
            end
        end
        if _lang ~= "cn" and _isExist then
            local keyIndex =  record._lang_key_map[key]
            if keyIndex then
                record._lang[keyIndex] = value
                return
            end
        end
        local keyIndex = record._raw_key_map[key]
        if keyIndex then
            record._raw[keyIndex] = value
        end
    end
end

--
function vip_voice.index()
    return __index_id
end

return vip_voice