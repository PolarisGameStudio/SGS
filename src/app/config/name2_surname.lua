--name2_surname

local _lang = "cn"
local _isExist = false
local _isBaseExist = false
local _isDataExist = false

-- key
local __key_map = {
  id = 1,    --编号-int 
  surname = 2,    --姓氏-string 

}

-- key type
local __key_type = {
  id = "int",    --编号-1 
  surname = "string",    --姓氏-2 

}


-- data
local name2_surname = {
    version =  1,
    _data = {
        [1] = {1,"小笹",},
        [2] = {2,"元井",},
        [3] = {3,"三河",},
        [4] = {4,"大角",},
        [5] = {5,"笹谷",},
        [6] = {6,"安積",},
        [7] = {7,"水村",},
        [8] = {8,"草薙",},
        [9] = {9,"飯塚",},
        [10] = {10,"岩山",},
        [11] = {11,"衣川",},
        [12] = {12,"竹森",},
        [13] = {13,"西松",},
        [14] = {14,"二木",},
        [15] = {15,"佐賀",},
        [16] = {16,"内原",},
        [17] = {17,"傳田",},
        [18] = {18,"浅山",},
        [19] = {19,"関矢",},
        [20] = {20,"建部",},
        [21] = {21,"押見",},
        [22] = {22,"蘆田",},
        [23] = {23,"武川",},
        [24] = {24,"加門",},
        [25] = {25,"与那嶺",},
        [26] = {26,"大向",},
        [27] = {27,"網本",},
        [28] = {28,"増野",},
        [29] = {29,"深田",},
        [30] = {30,"冨山",},
        [31] = {31,"大羽",},
        [32] = {32,"別所",},
        [33] = {33,"衞藤",},
        [34] = {34,"寺村",},
        [35] = {35,"小沼",},
        [36] = {36,"松林",},
        [37] = {37,"小澤",},
        [38] = {38,"守口",},
        [39] = {39,"山瀬",},
        [40] = {40,"牧田",},
        [41] = {41,"紺谷",},
        [42] = {42,"魚谷",},
        [43] = {43,"只野",},
        [44] = {44,"高石",},
        [45] = {45,"角谷",},
        [46] = {46,"瀧口",},
        [47] = {47,"大高",},
        [48] = {48,"新垣",},
        [49] = {49,"下地",},
        [50] = {50,"氏原",},
        [51] = {51,"鶴丸",},
        [52] = {52,"谷川",},
        [53] = {53,"洪",},
        [54] = {54,"呉",},
        [55] = {55,"古林",},
        [56] = {56,"豊泉",},
        [57] = {57,"東野",},
        [58] = {58,"安倍",},
        [59] = {59,"角南",},
        [60] = {60,"尾田",},
        [61] = {61,"君島",},
        [62] = {62,"戸倉",},
        [63] = {63,"坂谷",},
        [64] = {64,"呉屋",},
        [65] = {65,"平良",},
        [66] = {66,"向山",},
        [67] = {67,"米沢",},
        [68] = {68,"露木",},
        [69] = {69,"副島",},
        [70] = {70,"神原",},
        [71] = {71,"土肥",},
        [72] = {72,"市井",},
        [73] = {73,"水島",},
        [74] = {74,"浅岡",},
        [75] = {75,"高安",},
        [76] = {76,"芳野",},
        [77] = {77,"吉見",},
        [78] = {78,"友井",},
        [79] = {79,"苅谷",},
        [80] = {80,"坂上",},
        [81] = {81,"若木",},
        [82] = {82,"郡司",},
        [83] = {83,"塩津",},
        [84] = {84,"板橋",},
        [85] = {85,"炭谷",},
        [86] = {86,"白坂",},
        [87] = {87,"奥平",},
        [88] = {88,"宇根",},
        [89] = {89,"笹川",},
        [90] = {90,"浜川",},
        [91] = {91,"今本",},
        [92] = {92,"神村",},
        [93] = {93,"名波",},
        [94] = {94,"武久",},
        [95] = {95,"熊井",},
        [96] = {96,"盛田",},
        [97] = {97,"寺嶋",},
        [98] = {98,"秋間",},
        [99] = {99,"樽井",},
        [100] = {100,"三富",},
        [101] = {101,"彫",},
        [102] = {102,"増村",},
        [103] = {103,"梅川",},
        [104] = {104,"島根",},
        [105] = {105,"薛",},
        [106] = {106,"友利",},
        [107] = {107,"光井",},
        [108] = {108,"菊井",},
        [109] = {109,"中木",},
        [110] = {110,"稲野",},
        [111] = {111,"津本",},
        [112] = {112,"番場",},
        [113] = {113,"野添",},
        [114] = {114,"入山",},
        [115] = {115,"赤星",},
        [116] = {116,"岩橋",},
        [117] = {117,"小室",},
        [118] = {118,"外山",},
        [119] = {119,"浜口",},
        [120] = {120,"吉武",},
        [121] = {121,"香山",},
        [122] = {122,"兼平",},
        [123] = {123,"桂川",},
        [124] = {124,"古市",},
        [125] = {125,"小松崎",},
        [126] = {126,"瀧田",},
        [127] = {127,"会沢",},
        [128] = {128,"平賀",},
        [129] = {129,"梅",},
        [130] = {130,"石渡",},
        [131] = {131,"境",},
        [132] = {132,"屋代",},
        [133] = {133,"江尻",},
        [134] = {134,"瀬田",},
        [135] = {135,"柴崎",},
        [136] = {136,"都築",},
        [137] = {137,"岩切",},
        [138] = {138,"三須",},
        [139] = {139,"吉成",},
        [140] = {140,"和気",},
        [141] = {141,"今林",},
        [142] = {142,"古山",},
        [143] = {143,"馬場",},
        [144] = {144,"芦沢",},
        [145] = {145,"陰山",},
        [146] = {146,"成島",},
        [147] = {147,"泉山",},
        [148] = {148,"橋田",},
        [149] = {149,"袴田",},
        [150] = {150,"西條",},
        [151] = {151,"諸橋",},
        [152] = {152,"仮屋",},
        [153] = {153,"于",},
        [154] = {154,"中北",},
        [155] = {155,"平瀬",},
        [156] = {156,"下薗",},
        [157] = {157,"佐渡",},
        [158] = {158,"立田",},
        [159] = {159,"空",},
        [160] = {160,"當山",},
        [161] = {161,"児嶋",},
        [162] = {162,"中込",},
        [163] = {163,"色川",},
        [164] = {164,"竹永",},
        [165] = {165,"伊佐治",},
        [166] = {166,"押見",},
        [167] = {167,"蓑輪",},
        [168] = {168,"則武",},
        [169] = {169,"丸木",},
        [170] = {170,"冨士",},
        [171] = {171,"岡谷",},
        [172] = {172,"橋向",},
        [173] = {173,"愛須",},
        [174] = {174,"山下",},
        [175] = {175,"板村",},
        [176] = {176,"多根",},
        [177] = {177,"田篭",},
        [178] = {178,"田中",},
        [179] = {179,"笠嶋",},
        [180] = {180,"井高",},
        [181] = {181,"我妻",},
        [182] = {182,"矢張",},
        [183] = {183,"道添",},
        [184] = {184,"俊",},
        [185] = {185,"小勝",},
        [186] = {186,"柄本",},
        [187] = {187,"是久",},
        [188] = {188,"鈴木",},
        [189] = {189,"佐伯",},
        [190] = {190,"阪本",},
        [191] = {191,"木下",},
        [192] = {192,"齋藤",},
        [193] = {193,"細田",},
        [194] = {194,"澤田",},
        [195] = {195,"大木",},
        [196] = {196,"木村",},
        [197] = {197,"大内",},
        [198] = {198,"伊藤",},
        [199] = {199,"筒井",},
    }
}

-- index
local __index_id = {
    [1] = 1,
    [10] = 10,
    [100] = 100,
    [101] = 101,
    [102] = 102,
    [103] = 103,
    [104] = 104,
    [105] = 105,
    [106] = 106,
    [107] = 107,
    [108] = 108,
    [109] = 109,
    [11] = 11,
    [110] = 110,
    [111] = 111,
    [112] = 112,
    [113] = 113,
    [114] = 114,
    [115] = 115,
    [116] = 116,
    [117] = 117,
    [118] = 118,
    [119] = 119,
    [12] = 12,
    [120] = 120,
    [121] = 121,
    [122] = 122,
    [123] = 123,
    [124] = 124,
    [125] = 125,
    [126] = 126,
    [127] = 127,
    [128] = 128,
    [129] = 129,
    [13] = 13,
    [130] = 130,
    [131] = 131,
    [132] = 132,
    [133] = 133,
    [134] = 134,
    [135] = 135,
    [136] = 136,
    [137] = 137,
    [138] = 138,
    [139] = 139,
    [14] = 14,
    [140] = 140,
    [141] = 141,
    [142] = 142,
    [143] = 143,
    [144] = 144,
    [145] = 145,
    [146] = 146,
    [147] = 147,
    [148] = 148,
    [149] = 149,
    [15] = 15,
    [150] = 150,
    [151] = 151,
    [152] = 152,
    [153] = 153,
    [154] = 154,
    [155] = 155,
    [156] = 156,
    [157] = 157,
    [158] = 158,
    [159] = 159,
    [16] = 16,
    [160] = 160,
    [161] = 161,
    [162] = 162,
    [163] = 163,
    [164] = 164,
    [165] = 165,
    [166] = 166,
    [167] = 167,
    [168] = 168,
    [169] = 169,
    [17] = 17,
    [170] = 170,
    [171] = 171,
    [172] = 172,
    [173] = 173,
    [174] = 174,
    [175] = 175,
    [176] = 176,
    [177] = 177,
    [178] = 178,
    [179] = 179,
    [18] = 18,
    [180] = 180,
    [181] = 181,
    [182] = 182,
    [183] = 183,
    [184] = 184,
    [185] = 185,
    [186] = 186,
    [187] = 187,
    [188] = 188,
    [189] = 189,
    [19] = 19,
    [190] = 190,
    [191] = 191,
    [192] = 192,
    [193] = 193,
    [194] = 194,
    [195] = 195,
    [196] = 196,
    [197] = 197,
    [198] = 198,
    [199] = 199,
    [2] = 2,
    [20] = 20,
    [21] = 21,
    [22] = 22,
    [23] = 23,
    [24] = 24,
    [25] = 25,
    [26] = 26,
    [27] = 27,
    [28] = 28,
    [29] = 29,
    [3] = 3,
    [30] = 30,
    [31] = 31,
    [32] = 32,
    [33] = 33,
    [34] = 34,
    [35] = 35,
    [36] = 36,
    [37] = 37,
    [38] = 38,
    [39] = 39,
    [4] = 4,
    [40] = 40,
    [41] = 41,
    [42] = 42,
    [43] = 43,
    [44] = 44,
    [45] = 45,
    [46] = 46,
    [47] = 47,
    [48] = 48,
    [49] = 49,
    [5] = 5,
    [50] = 50,
    [51] = 51,
    [52] = 52,
    [53] = 53,
    [54] = 54,
    [55] = 55,
    [56] = 56,
    [57] = 57,
    [58] = 58,
    [59] = 59,
    [6] = 6,
    [60] = 60,
    [61] = 61,
    [62] = 62,
    [63] = 63,
    [64] = 64,
    [65] = 65,
    [66] = 66,
    [67] = 67,
    [68] = 68,
    [69] = 69,
    [7] = 7,
    [70] = 70,
    [71] = 71,
    [72] = 72,
    [73] = 73,
    [74] = 74,
    [75] = 75,
    [76] = 76,
    [77] = 77,
    [78] = 78,
    [79] = 79,
    [8] = 8,
    [80] = 80,
    [81] = 81,
    [82] = 82,
    [83] = 83,
    [84] = 84,
    [85] = 85,
    [86] = 86,
    [87] = 87,
    [88] = 88,
    [89] = 89,
    [9] = 9,
    [90] = 90,
    [91] = 91,
    [92] = 92,
    [93] = 93,
    [94] = 94,
    [95] = 95,
    [96] = 96,
    [97] = 97,
    [98] = 98,
    [99] = 99,

}

-- index mainkey map
local __main_key_map = {
    [1] = 1,
    [10] = 10,
    [100] = 100,
    [101] = 101,
    [102] = 102,
    [103] = 103,
    [104] = 104,
    [105] = 105,
    [106] = 106,
    [107] = 107,
    [108] = 108,
    [109] = 109,
    [11] = 11,
    [110] = 110,
    [111] = 111,
    [112] = 112,
    [113] = 113,
    [114] = 114,
    [115] = 115,
    [116] = 116,
    [117] = 117,
    [118] = 118,
    [119] = 119,
    [12] = 12,
    [120] = 120,
    [121] = 121,
    [122] = 122,
    [123] = 123,
    [124] = 124,
    [125] = 125,
    [126] = 126,
    [127] = 127,
    [128] = 128,
    [129] = 129,
    [13] = 13,
    [130] = 130,
    [131] = 131,
    [132] = 132,
    [133] = 133,
    [134] = 134,
    [135] = 135,
    [136] = 136,
    [137] = 137,
    [138] = 138,
    [139] = 139,
    [14] = 14,
    [140] = 140,
    [141] = 141,
    [142] = 142,
    [143] = 143,
    [144] = 144,
    [145] = 145,
    [146] = 146,
    [147] = 147,
    [148] = 148,
    [149] = 149,
    [15] = 15,
    [150] = 150,
    [151] = 151,
    [152] = 152,
    [153] = 153,
    [154] = 154,
    [155] = 155,
    [156] = 156,
    [157] = 157,
    [158] = 158,
    [159] = 159,
    [16] = 16,
    [160] = 160,
    [161] = 161,
    [162] = 162,
    [163] = 163,
    [164] = 164,
    [165] = 165,
    [166] = 166,
    [167] = 167,
    [168] = 168,
    [169] = 169,
    [17] = 17,
    [170] = 170,
    [171] = 171,
    [172] = 172,
    [173] = 173,
    [174] = 174,
    [175] = 175,
    [176] = 176,
    [177] = 177,
    [178] = 178,
    [179] = 179,
    [18] = 18,
    [180] = 180,
    [181] = 181,
    [182] = 182,
    [183] = 183,
    [184] = 184,
    [185] = 185,
    [186] = 186,
    [187] = 187,
    [188] = 188,
    [189] = 189,
    [19] = 19,
    [190] = 190,
    [191] = 191,
    [192] = 192,
    [193] = 193,
    [194] = 194,
    [195] = 195,
    [196] = 196,
    [197] = 197,
    [198] = 198,
    [199] = 199,
    [2] = 2,
    [20] = 20,
    [21] = 21,
    [22] = 22,
    [23] = 23,
    [24] = 24,
    [25] = 25,
    [26] = 26,
    [27] = 27,
    [28] = 28,
    [29] = 29,
    [3] = 3,
    [30] = 30,
    [31] = 31,
    [32] = 32,
    [33] = 33,
    [34] = 34,
    [35] = 35,
    [36] = 36,
    [37] = 37,
    [38] = 38,
    [39] = 39,
    [4] = 4,
    [40] = 40,
    [41] = 41,
    [42] = 42,
    [43] = 43,
    [44] = 44,
    [45] = 45,
    [46] = 46,
    [47] = 47,
    [48] = 48,
    [49] = 49,
    [5] = 5,
    [50] = 50,
    [51] = 51,
    [52] = 52,
    [53] = 53,
    [54] = 54,
    [55] = 55,
    [56] = 56,
    [57] = 57,
    [58] = 58,
    [59] = 59,
    [6] = 6,
    [60] = 60,
    [61] = 61,
    [62] = 62,
    [63] = 63,
    [64] = 64,
    [65] = 65,
    [66] = 66,
    [67] = 67,
    [68] = 68,
    [69] = 69,
    [7] = 7,
    [70] = 70,
    [71] = 71,
    [72] = 72,
    [73] = 73,
    [74] = 74,
    [75] = 75,
    [76] = 76,
    [77] = 77,
    [78] = 78,
    [79] = 79,
    [8] = 8,
    [80] = 80,
    [81] = 81,
    [82] = 82,
    [83] = 83,
    [84] = 84,
    [85] = 85,
    [86] = 86,
    [87] = 87,
    [88] = 88,
    [89] = 89,
    [9] = 9,
    [90] = 90,
    [91] = 91,
    [92] = 92,
    [93] = 93,
    [94] = 94,
    [95] = 95,
    [96] = 96,
    [97] = 97,
    [98] = 98,
    [99] = 99,

}

-- metatable
local mt = { 
    __index = function(t, k) 
        local key_map = t._raw_key_map
        assert(key_map[k], "cannot find " .. k .. " in name2_surname")
        if _lang ~= "cn" and _isDataExist  and t._data_key_map[k] then
            return t._data[t._data_key_map[k]]
        end
        if _lang ~= "cn" and _isExist  and t._lang_key_map[k] then
            return t._lang[t._lang_key_map[k]]
        end
        return t._raw[key_map[k]]
    end
}

-- 
function name2_surname.length()
    return #name2_surname._data
end

-- 
function name2_surname.hasKey(k)
    if __key_map[k] == nil then
        return false
    else
        return true
    end
end

--
function name2_surname.isVersionValid(v)
    if name2_surname.version then
        if v then
            return name2_surname.version <= v
        else
            return false
        end
    else
        return true
    end
end

--
function name2_surname.indexOf(index)
    if index == nil or not name2_surname._data[index] then
        return nil
    end
    if Lang.lang ~= _lang then 
        _lang = Lang.lang
        if Lang.lang ~= "cn" then
            _isDataExist = Lang.isFileExist("app/i18n/".. _lang .."/data/name2_surname.lua")
            _isExist = Lang.isFileExist("app/i18n/".. _lang .."/config/name2_surname.lua")
            _isBaseExist =  Lang.isFileExist("app/i18n/".. _lang .."/base/name2_surname.lua")

            if _isDataExist then
                local table = require( "app.i18n.".. _lang ..".data." .. "name2_surname" )
                _isDataExist = name2_surname.isVersionValid(table.version)
            end
            if _isBaseExist then
                local table = require( "app.i18n.".. _lang ..".base." .. "name2_surname" )
                _isBaseExist = name2_surname.isVersionValid(table.version)
            end
            if _isExist then
                local table = require( "app.i18n.".. _lang ..".config." .. "name2_surname" )
                _isExist = name2_surname.isVersionValid(table.version)
            end
        end
    end
    local config = {_raw = nil,_raw_key_map = __key_map,_lang = nil,_lang_key_map = nil,_data = nil,_data_key_map = nil}
    if _lang ~= "cn" and _isDataExist then
        local table = require( "app.i18n.".. _lang ..".data." .. "name2_surname" )
        local main_key = __main_key_map[index]
		local index_key = "__index_id"
        local data_index = table[index_key][main_key]
        config._data = table._data[data_index]
        config._data_key_map = table.__key_map
    end

    if _lang ~= "cn" and _isExist then
        local table = require( "app.i18n.".. _lang ..".config." .. "name2_surname" )
        local main_key = __main_key_map[index]
		local index_key = "__index_id"
        local lang_index = table[index_key][main_key]
        config._lang = table._data[lang_index]
        config._lang_key_map = table.__key_map
    end
    config._raw = name2_surname._data[index]
    if _lang ~= "cn" and _isBaseExist then
        local table_base = require( "app.i18n.".. _lang ..".base." .. "name2_surname" )
        config._raw = table_base._data[index] 
    end
    return setmetatable(config, mt)
end

--
function name2_surname.get(id)
    
    return name2_surname.indexOf(__index_id[id])
        
end

--
function name2_surname.set(id, key, value)
    local record = name2_surname.get(id)
    if record then
        if _lang ~= "cn" and _isDataExist then
            local keyIndex =  record._data_key_map[key]
            if keyIndex then
                record._data[keyIndex] = value
                return
            end
        end
        if _lang ~= "cn" and _isExist then
            local keyIndex =  record._lang_key_map[key]
            if keyIndex then
                record._lang[keyIndex] = value
                return
            end
        end
        local keyIndex = record._raw_key_map[key]
        if keyIndex then
            record._raw[keyIndex] = value
        end
    end
end

--
function name2_surname.index()
    return __index_id
end

return name2_surname