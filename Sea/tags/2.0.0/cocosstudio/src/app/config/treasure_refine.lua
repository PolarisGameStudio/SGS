--treasure_refine

local _lang = "cn"
local _isExist = false

-- key
local __key_map = {
  level = 1,    --精炼等级-int 
  templet = 2,    --模板-int 
  treasure = 3,    --同名宝物-int 
  cost_type_1 = 4,    --材料类型1-int 
  cost_value_1 = 5,    --材料类型值1-int 
  cost_size_1 = 6,    --材料数量1-int 
  cost_type_2 = 7,    --材料类型2-int 
  cost_value_2 = 8,    --材料类型值2-int 
  cost_size_2 = 9,    --材料数量2-int 
  refine_type_1 = 10,    --精炼1属性类型-int 
  refine_value_1 = 11,    --精炼1属性数值-int 
  refine_type_2 = 12,    --精炼2属性类型-int 
  refine_value_2 = 13,    --精炼2属性数值-int 
  refine_type_3 = 14,    --精炼3属性类型-int 
  refine_value_3 = 15,    --精炼3属性数值-int 
  refine_type_4 = 16,    --精炼4属性类型-int 
  refine_value_4 = 17,    --精炼4属性数值-int 
  refine_type_5 = 18,    --精炼5属性类型-int 
  refine_value_5 = 19,    --精炼5属性数值-int 
  refine_type_6 = 20,    --精炼6属性类型-int 
  refine_value_6 = 21,    --精炼6属性数值-int 

}

-- key type
local __key_type = {
  level = "int",    --精炼等级-1 
  templet = "int",    --模板-2 
  treasure = "int",    --同名宝物-3 
  cost_type_1 = "int",    --材料类型1-4 
  cost_value_1 = "int",    --材料类型值1-5 
  cost_size_1 = "int",    --材料数量1-6 
  cost_type_2 = "int",    --材料类型2-7 
  cost_value_2 = "int",    --材料类型值2-8 
  cost_size_2 = "int",    --材料数量2-9 
  refine_type_1 = "int",    --精炼1属性类型-10 
  refine_value_1 = "int",    --精炼1属性数值-11 
  refine_type_2 = "int",    --精炼2属性类型-12 
  refine_value_2 = "int",    --精炼2属性数值-13 
  refine_type_3 = "int",    --精炼3属性类型-14 
  refine_value_3 = "int",    --精炼3属性数值-15 
  refine_type_4 = "int",    --精炼4属性类型-16 
  refine_value_4 = "int",    --精炼4属性数值-17 
  refine_type_5 = "int",    --精炼5属性类型-18 
  refine_value_5 = "int",    --精炼5属性数值-19 
  refine_type_6 = "int",    --精炼6属性类型-20 
  refine_value_6 = "int",    --精炼6属性数值-21 

}


-- data
local treasure_refine = {
    _data = {
        [1] = {0,1,0,6,10,30,5,2,18000,1,0,7,0,17,0,18,0,15,0,16,0,},
        [2] = {1,1,0,6,10,60,5,2,60000,1,100,7,770,17,20,18,20,15,20,16,20,},
        [3] = {2,1,1,6,10,120,5,2,108000,1,120,7,920,17,20,18,20,15,20,16,20,},
        [4] = {3,1,1,6,10,240,5,2,144000,1,140,7,1070,17,20,18,20,15,20,16,20,},
        [5] = {4,1,1,6,10,360,5,2,180000,1,180,7,1380,17,20,18,20,15,20,16,20,},
        [6] = {5,1,1,6,10,480,5,2,228000,1,220,7,1680,17,20,18,20,15,20,16,20,},
        [7] = {6,1,2,6,10,600,5,2,270000,1,290,7,2140,17,20,18,20,15,20,16,20,},
        [8] = {7,1,2,6,10,750,5,2,312000,1,350,7,2600,17,20,18,20,15,20,16,20,},
        [9] = {8,1,2,6,10,900,5,2,354000,1,430,7,3210,17,20,18,20,15,20,16,20,},
        [10] = {9,1,2,6,10,1050,5,2,396000,1,550,7,4130,17,20,18,20,15,20,16,20,},
        [11] = {10,1,3,6,10,1200,5,2,438000,1,670,7,5050,17,20,18,20,15,20,16,20,},
        [12] = {11,1,3,6,10,1350,5,2,480000,1,820,7,6120,17,20,18,20,15,20,16,20,},
        [13] = {12,1,3,6,10,1500,5,2,540000,1,1000,7,7500,17,20,18,20,15,20,16,20,},
        [14] = {13,1,3,6,10,1650,5,2,600000,1,1200,7,9030,17,20,18,20,15,20,16,20,},
        [15] = {14,1,3,6,10,1800,5,2,660000,1,1430,7,10710,17,20,18,20,15,20,16,20,},
        [16] = {15,1,0,6,10,0,5,2,0,1,1670,7,12550,17,20,18,20,15,20,16,20,},
        [17] = {0,2,0,6,10,40,5,2,24000,1,0,7,0,17,0,18,0,15,0,16,0,},
        [18] = {1,2,0,6,10,80,5,2,80000,1,150,7,1130,17,30,18,30,15,30,16,30,},
        [19] = {2,2,1,6,10,160,5,2,144000,1,180,7,1350,17,30,18,30,15,30,16,30,},
        [20] = {3,2,1,6,10,320,5,2,192000,1,210,7,1580,17,30,18,30,15,30,16,30,},
        [21] = {4,2,1,6,10,480,5,2,240000,1,270,7,2030,17,30,18,30,15,30,16,30,},
        [22] = {5,2,1,6,10,640,5,2,304000,1,330,7,2480,17,30,18,30,15,30,16,30,},
        [23] = {6,2,2,6,10,800,5,2,360000,1,420,7,3150,17,30,18,30,15,30,16,30,},
        [24] = {7,2,2,6,10,1000,5,2,416000,1,510,7,3830,17,30,18,30,15,30,16,30,},
        [25] = {8,2,2,6,10,1200,5,2,472000,1,630,7,4730,17,30,18,30,15,30,16,30,},
        [26] = {9,2,2,6,10,1400,5,2,528000,1,810,7,6080,17,30,18,30,15,30,16,30,},
        [27] = {10,2,3,6,10,1600,5,2,584000,1,990,7,7430,17,30,18,30,15,30,16,30,},
        [28] = {11,2,3,6,10,1800,5,2,640000,1,1200,7,9000,17,30,18,30,15,30,16,30,},
        [29] = {12,2,3,6,10,2000,5,2,720000,1,1470,7,11030,17,30,18,30,15,30,16,30,},
        [30] = {13,2,3,6,10,2200,5,2,800000,1,1770,7,13280,17,30,18,30,15,30,16,30,},
        [31] = {14,2,3,6,10,2400,5,2,880000,1,2100,7,15750,17,30,18,30,15,30,16,30,},
        [32] = {15,2,0,6,10,0,5,2,0,1,2460,7,18450,17,30,18,30,15,30,16,30,},
        [33] = {0,3,0,6,10,50,5,2,30000,1,0,7,0,17,0,18,0,15,0,16,0,},
        [34] = {1,3,0,6,10,100,5,2,100000,1,300,7,2250,17,50,18,50,15,50,16,50,},
        [35] = {2,3,1,6,10,200,5,2,180000,1,360,7,2700,17,50,18,50,15,50,16,50,},
        [36] = {3,3,1,6,10,400,5,2,240000,1,420,7,3150,17,50,18,50,15,50,16,50,},
        [37] = {4,3,1,6,10,600,5,2,300000,1,540,7,4050,17,50,18,50,15,50,16,50,},
        [38] = {5,3,1,6,10,800,5,2,380000,1,660,7,4950,17,50,18,50,15,50,16,50,},
        [39] = {6,3,2,6,10,1000,5,2,450000,1,840,7,6300,17,50,18,50,15,50,16,50,},
        [40] = {7,3,2,6,10,1250,5,2,520000,1,1020,7,7650,17,50,18,50,15,50,16,50,},
        [41] = {8,3,2,6,10,1500,5,2,590000,1,1260,7,9450,17,50,18,50,15,50,16,50,},
        [42] = {9,3,2,6,10,1750,5,2,660000,1,1620,7,12150,17,50,18,50,15,50,16,50,},
        [43] = {10,3,3,6,10,2000,5,2,730000,1,1980,7,14850,17,50,18,50,15,50,16,50,},
        [44] = {11,3,3,6,10,2250,5,2,800000,1,2400,7,18000,17,50,18,50,15,50,16,50,},
        [45] = {12,3,3,6,10,2500,5,2,900000,1,2940,7,22050,17,50,18,50,15,50,16,50,},
        [46] = {13,3,3,6,10,2750,5,2,1000000,1,3540,7,26550,17,50,18,50,15,50,16,50,},
        [47] = {14,3,3,6,10,3000,5,2,1100000,1,4200,7,31500,17,50,18,50,15,50,16,50,},
        [48] = {15,3,0,6,10,0,5,2,0,1,4920,7,36900,17,50,18,50,15,50,16,50,},
        [49] = {0,4,0,6,10,50,5,2,30000,1,5000,7,37500,17,200,18,200,15,0,16,0,},
        [50] = {1,4,0,6,10,100,5,2,100000,1,300,7,2250,17,0,18,0,15,50,16,50,},
        [51] = {2,4,1,6,10,200,5,2,180000,1,360,7,2700,17,0,18,0,15,50,16,50,},
        [52] = {3,4,1,6,10,400,5,2,240000,1,420,7,3150,17,0,18,0,15,50,16,50,},
        [53] = {4,4,1,6,10,600,5,2,300000,1,540,7,4050,17,0,18,0,15,50,16,50,},
        [54] = {5,4,1,6,10,800,5,2,380000,1,660,7,4950,17,0,18,0,15,50,16,50,},
        [55] = {6,4,2,6,10,1000,5,2,450000,1,840,7,6300,17,0,18,0,15,50,16,50,},
        [56] = {7,4,2,6,10,1250,5,2,520000,1,1020,7,7650,17,0,18,0,15,50,16,50,},
        [57] = {8,4,2,6,10,1500,5,2,590000,1,1260,7,9450,17,0,18,0,15,50,16,50,},
        [58] = {9,4,2,6,10,1750,5,2,660000,1,1620,7,12150,17,0,18,0,15,50,16,50,},
        [59] = {10,4,3,6,10,2000,5,2,730000,1,1980,7,14850,17,0,18,0,15,50,16,50,},
        [60] = {11,4,3,6,10,2250,5,2,800000,1,2400,7,18000,17,0,18,0,15,50,16,50,},
        [61] = {12,4,3,6,10,2500,5,2,900000,1,2940,7,22050,17,0,18,0,15,50,16,50,},
        [62] = {13,4,3,6,10,2750,5,2,1000000,1,3540,7,26550,17,0,18,0,15,50,16,50,},
        [63] = {14,4,3,6,10,3000,5,2,1100000,1,4200,7,31500,17,0,18,0,15,50,16,50,},
        [64] = {15,4,4,6,10,3250,5,2,1200000,1,4920,7,36900,17,0,18,0,15,50,16,50,},
        [65] = {16,4,4,6,10,3500,5,2,1300000,1,5700,7,42750,17,0,18,0,15,50,16,50,},
        [66] = {17,4,4,6,10,3750,5,2,1400000,1,6540,7,49050,17,0,18,0,15,50,16,50,},
        [67] = {18,4,4,6,10,4000,5,2,1500000,1,7440,7,55800,17,0,18,0,15,50,16,50,},
        [68] = {19,4,4,6,10,4250,5,2,1600000,1,8400,7,63000,17,0,18,0,15,50,16,50,},
        [69] = {20,4,0,6,10,0,5,2,0,1,9420,7,70650,17,0,18,0,15,50,16,50,},
        [70] = {0,5,0,6,10,50,5,2,30000,1,5000,7,37500,17,0,18,0,15,200,16,200,},
        [71] = {1,5,0,6,10,100,5,2,100000,1,300,7,2250,17,50,18,50,15,0,16,0,},
        [72] = {2,5,1,6,10,200,5,2,180000,1,360,7,2700,17,50,18,50,15,0,16,0,},
        [73] = {3,5,1,6,10,400,5,2,240000,1,420,7,3150,17,50,18,50,15,0,16,0,},
        [74] = {4,5,1,6,10,600,5,2,300000,1,540,7,4050,17,50,18,50,15,0,16,0,},
        [75] = {5,5,1,6,10,800,5,2,380000,1,660,7,4950,17,50,18,50,15,0,16,0,},
        [76] = {6,5,2,6,10,1000,5,2,450000,1,840,7,6300,17,50,18,50,15,0,16,0,},
        [77] = {7,5,2,6,10,1250,5,2,520000,1,1020,7,7650,17,50,18,50,15,0,16,0,},
        [78] = {8,5,2,6,10,1500,5,2,590000,1,1260,7,9450,17,50,18,50,15,0,16,0,},
        [79] = {9,5,2,6,10,1750,5,2,660000,1,1620,7,12150,17,50,18,50,15,0,16,0,},
        [80] = {10,5,3,6,10,2000,5,2,730000,1,1980,7,14850,17,50,18,50,15,0,16,0,},
        [81] = {11,5,3,6,10,2250,5,2,800000,1,2400,7,18000,17,50,18,50,15,0,16,0,},
        [82] = {12,5,3,6,10,2500,5,2,900000,1,2940,7,22050,17,50,18,50,15,0,16,0,},
        [83] = {13,5,3,6,10,2750,5,2,1000000,1,3540,7,26550,17,50,18,50,15,0,16,0,},
        [84] = {14,5,3,6,10,3000,5,2,1100000,1,4200,7,31500,17,50,18,50,15,0,16,0,},
        [85] = {15,5,4,6,10,3250,5,2,1200000,1,4920,7,36900,17,50,18,50,15,0,16,0,},
        [86] = {16,5,4,6,10,3500,5,2,1300000,1,5700,7,42750,17,50,18,50,15,0,16,0,},
        [87] = {17,5,4,6,10,3750,5,2,1400000,1,6540,7,49050,17,50,18,50,15,0,16,0,},
        [88] = {18,5,4,6,10,4000,5,2,1500000,1,7440,7,55800,17,50,18,50,15,0,16,0,},
        [89] = {19,5,4,6,10,4250,5,2,1600000,1,8400,7,63000,17,50,18,50,15,0,16,0,},
        [90] = {20,5,0,6,10,0,5,2,0,1,9420,7,70650,17,50,18,50,15,0,16,0,},
    }
}

-- index
local __index_level_templet = {
    ["0_1"] = 1,
    ["0_2"] = 17,
    ["0_3"] = 33,
    ["0_4"] = 49,
    ["0_5"] = 70,
    ["10_1"] = 11,
    ["10_2"] = 27,
    ["10_3"] = 43,
    ["10_4"] = 59,
    ["10_5"] = 80,
    ["11_1"] = 12,
    ["11_2"] = 28,
    ["11_3"] = 44,
    ["11_4"] = 60,
    ["11_5"] = 81,
    ["12_1"] = 13,
    ["12_2"] = 29,
    ["12_3"] = 45,
    ["12_4"] = 61,
    ["12_5"] = 82,
    ["13_1"] = 14,
    ["13_2"] = 30,
    ["13_3"] = 46,
    ["13_4"] = 62,
    ["13_5"] = 83,
    ["14_1"] = 15,
    ["14_2"] = 31,
    ["14_3"] = 47,
    ["14_4"] = 63,
    ["14_5"] = 84,
    ["15_1"] = 16,
    ["15_2"] = 32,
    ["15_3"] = 48,
    ["15_4"] = 64,
    ["15_5"] = 85,
    ["16_4"] = 65,
    ["16_5"] = 86,
    ["17_4"] = 66,
    ["17_5"] = 87,
    ["18_4"] = 67,
    ["18_5"] = 88,
    ["19_4"] = 68,
    ["19_5"] = 89,
    ["1_1"] = 2,
    ["1_2"] = 18,
    ["1_3"] = 34,
    ["1_4"] = 50,
    ["1_5"] = 71,
    ["20_4"] = 69,
    ["20_5"] = 90,
    ["2_1"] = 3,
    ["2_2"] = 19,
    ["2_3"] = 35,
    ["2_4"] = 51,
    ["2_5"] = 72,
    ["3_1"] = 4,
    ["3_2"] = 20,
    ["3_3"] = 36,
    ["3_4"] = 52,
    ["3_5"] = 73,
    ["4_1"] = 5,
    ["4_2"] = 21,
    ["4_3"] = 37,
    ["4_4"] = 53,
    ["4_5"] = 74,
    ["5_1"] = 6,
    ["5_2"] = 22,
    ["5_3"] = 38,
    ["5_4"] = 54,
    ["5_5"] = 75,
    ["6_1"] = 7,
    ["6_2"] = 23,
    ["6_3"] = 39,
    ["6_4"] = 55,
    ["6_5"] = 76,
    ["7_1"] = 8,
    ["7_2"] = 24,
    ["7_3"] = 40,
    ["7_4"] = 56,
    ["7_5"] = 77,
    ["8_1"] = 9,
    ["8_2"] = 25,
    ["8_3"] = 41,
    ["8_4"] = 57,
    ["8_5"] = 78,
    ["9_1"] = 10,
    ["9_2"] = 26,
    ["9_3"] = 42,
    ["9_4"] = 58,
    ["9_5"] = 79,

}

-- metatable
local mt = { 
    __index = function(t, k) 
        assert(__key_map[k], "cannot find " .. k .. " in treasure_refine")
        if _lang ~= "cn" and _isExist  and t._lang_key_map[k] then
            return t._lang[t._lang_key_map[k]]
        end
        return t._raw[__key_map[k]]
    end
}

-- 
function treasure_refine.length()
    return #treasure_refine._data
end

-- 
function treasure_refine.hasKey(k)
    if __key_map[k] == nil then
        return false
    else
        return true
    end
end

--
function treasure_refine.indexOf(index)
    if index == nil or not treasure_refine._data[index] then
        return nil
    end
    if Lang.lang ~= "cn" and Lang.lang ~= _lang then 
        _lang = Lang.lang 
        if Lang.isFileExist("app/i18n/".. _lang .."/config/treasure_refine.lua") then _isExist =  true end
    end
    if _lang ~= "cn" and _isExist then
        local table = require( "app.i18n.".. _lang ..".config." .. "treasure_refine" )
        return setmetatable({_raw = treasure_refine._data[index], _lang=table._data[index], _lang_key_map=table.__key_map}, mt)
    end
    return setmetatable({_raw = treasure_refine._data[index]}, mt)
end

--
function treasure_refine.get(level,templet)
    
    local k = level .. '_' .. templet
    return treasure_refine.indexOf(__index_level_templet[k])
        
end

--
function treasure_refine.set(level,templet, key, value)
    local record = treasure_refine.get(level,templet)
    if record then
        local keyIndex = __key_map[key]
        if keyIndex then
            record._raw[keyIndex] = value
        end
    end
end

--
function treasure_refine.index()
    return __index_level_templet
end

return treasure_refine