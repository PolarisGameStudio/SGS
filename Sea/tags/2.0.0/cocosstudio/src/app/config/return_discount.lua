--return_discount

local _lang = "cn"
local _isExist = false

-- key
local __key_map = {
  id = 1,    --编号-int 
  vip_min = 2,    --VIP等级下限-int 
  vip_max = 3,    --VIP等级上限-int 
  day_min = 4,    --开服天数下限-int 
  day_max = 5,    --开服天数上限-int 
  is_work = 6,    --是否生效-int 
  vip_pay_id = 7,    --价格id-int 
  reward_type1 = 8,    --奖励类型1-int 
  reward_value1 = 9,    --奖励类性值1-int 
  reward_size1 = 10,    --奖励数量1-int 
  reward_type2 = 11,    --奖励类型2-int 
  reward_value2 = 12,    --奖励类性值2-int 
  reward_size2 = 13,    --奖励数量2-int 
  time = 14,    --领取次数-int 
  recover = 15,    --刷新方式-int 

}

-- key type
local __key_type = {
  id = "int",    --编号-1 
  vip_min = "int",    --VIP等级下限-2 
  vip_max = "int",    --VIP等级上限-3 
  day_min = "int",    --开服天数下限-4 
  day_max = "int",    --开服天数上限-5 
  is_work = "int",    --是否生效-6 
  vip_pay_id = "int",    --价格id-7 
  reward_type1 = "int",    --奖励类型1-8 
  reward_value1 = "int",    --奖励类性值1-9 
  reward_size1 = "int",    --奖励数量1-10 
  reward_type2 = "int",    --奖励类型2-11 
  reward_value2 = "int",    --奖励类性值2-12 
  reward_size2 = "int",    --奖励数量2-13 
  time = "int",    --领取次数-14 
  recover = "int",    --刷新方式-15 

}


-- data
local return_discount = {
    _data = {
        [1] = {1,0,5,30,60,1,10089,6,1,10,5,1,100,5,1,},
        [2] = {2,0,5,30,60,1,10090,6,1,10,5,1,100,5,1,},
        [3] = {3,0,5,30,60,1,10091,6,1,10,5,1,100,5,1,},
        [4] = {4,0,5,30,60,1,10092,6,1,10,5,1,100,5,1,},
        [5] = {5,0,5,30,60,1,10093,6,1,10,5,1,100,5,1,},
        [6] = {6,0,5,30,60,1,10094,6,1,10,5,1,100,5,1,},
        [7] = {7,0,5,30,60,1,10095,6,1,10,5,1,100,5,0,},
        [8] = {8,0,5,30,60,1,10096,6,1,10,5,1,100,5,0,},
        [9] = {9,0,5,30,60,0,0,0,0,0,0,0,0,0,0,},
        [10] = {10,0,5,30,60,0,0,0,0,0,0,0,0,0,0,},
        [11] = {11,6,10,30,60,1,10089,6,1,20,5,1,200,5,1,},
        [12] = {12,6,10,30,60,1,10090,6,1,20,5,1,200,5,1,},
        [13] = {13,6,10,30,60,1,10091,6,1,20,5,1,200,5,1,},
        [14] = {14,6,10,30,60,1,10092,6,1,20,5,1,200,5,1,},
        [15] = {15,6,10,30,60,1,10093,6,1,20,5,1,200,5,1,},
        [16] = {16,6,10,30,60,1,10094,6,1,20,5,1,200,5,1,},
        [17] = {17,6,10,30,60,1,10095,6,1,20,5,1,200,5,0,},
        [18] = {18,6,10,30,60,1,10096,6,1,20,5,1,200,5,0,},
        [19] = {19,6,10,30,60,0,0,0,0,0,0,0,0,0,0,},
        [20] = {20,6,10,30,60,0,0,0,0,0,0,0,0,0,0,},
        [21] = {21,11,16,30,60,1,10089,6,1,30,5,1,300,5,1,},
        [22] = {22,11,16,30,60,1,10090,6,1,30,5,1,300,5,1,},
        [23] = {23,11,16,30,60,1,10091,6,1,30,5,1,300,5,1,},
        [24] = {24,11,16,30,60,1,10092,6,1,30,5,1,300,5,1,},
        [25] = {25,11,16,30,60,1,10093,6,1,30,5,1,300,5,1,},
        [26] = {26,11,16,30,60,1,10094,6,1,30,5,1,300,5,1,},
        [27] = {27,11,16,30,60,1,10095,6,1,30,5,1,300,5,0,},
        [28] = {28,11,16,30,60,1,10096,6,1,30,5,1,300,5,0,},
        [29] = {29,11,16,30,60,0,0,0,0,0,0,0,0,0,0,},
        [30] = {30,11,16,30,60,0,0,0,0,0,0,0,0,0,0,},
        [31] = {31,0,5,61,999,1,10089,6,1,40,5,1,400,5,1,},
        [32] = {32,0,5,61,999,1,10090,6,1,40,5,1,400,5,1,},
        [33] = {33,0,5,61,999,1,10091,6,1,40,5,1,400,5,1,},
        [34] = {34,0,5,61,999,1,10092,6,1,40,5,1,400,5,1,},
        [35] = {35,0,5,61,999,1,10093,6,1,40,5,1,400,5,1,},
        [36] = {36,0,5,61,999,1,10094,6,1,40,5,1,400,5,1,},
        [37] = {37,0,5,61,999,1,10095,6,1,40,5,1,400,5,0,},
        [38] = {38,0,5,61,999,1,10096,6,1,40,5,1,400,5,0,},
        [39] = {39,0,5,61,999,0,0,0,0,0,0,0,0,0,0,},
        [40] = {40,0,5,61,999,0,0,0,0,0,0,0,0,0,0,},
        [41] = {41,6,10,61,999,1,10089,6,1,50,5,1,500,5,1,},
        [42] = {42,6,10,61,999,1,10090,6,1,50,5,1,500,5,1,},
        [43] = {43,6,10,61,999,1,10091,6,1,50,5,1,500,5,1,},
        [44] = {44,6,10,61,999,1,10092,6,1,50,5,1,500,5,1,},
        [45] = {45,6,10,61,999,1,10093,6,1,50,5,1,500,5,1,},
        [46] = {46,6,10,61,999,1,10094,6,1,50,5,1,500,5,1,},
        [47] = {47,6,10,61,999,1,10095,6,1,50,5,1,500,5,0,},
        [48] = {48,6,10,61,999,1,10096,6,1,50,5,1,500,5,0,},
        [49] = {49,6,10,61,999,0,0,0,0,0,0,0,0,0,0,},
        [50] = {50,6,10,61,999,0,0,0,0,0,0,0,0,0,0,},
        [51] = {51,11,16,61,999,1,10089,6,1,60,5,1,600,5,1,},
        [52] = {52,11,16,61,999,1,10090,6,1,60,5,1,600,5,1,},
        [53] = {53,11,16,61,999,1,10091,6,1,60,5,1,600,5,1,},
        [54] = {54,11,16,61,999,1,10092,6,1,60,5,1,600,5,1,},
        [55] = {55,11,16,61,999,1,10093,6,1,60,5,1,600,5,1,},
        [56] = {56,11,16,61,999,1,10094,6,1,60,5,1,600,5,1,},
        [57] = {57,11,16,61,999,1,10095,6,1,60,5,1,600,5,0,},
        [58] = {58,11,16,61,999,1,10096,6,1,60,5,1,600,5,0,},
        [59] = {59,11,16,61,999,0,0,0,0,0,0,0,0,0,0,},
        [60] = {60,11,16,61,999,0,0,0,0,0,0,0,0,0,0,},
    }
}

-- index
local __index_id = {
    [1] = 1,
    [10] = 10,
    [11] = 11,
    [12] = 12,
    [13] = 13,
    [14] = 14,
    [15] = 15,
    [16] = 16,
    [17] = 17,
    [18] = 18,
    [19] = 19,
    [2] = 2,
    [20] = 20,
    [21] = 21,
    [22] = 22,
    [23] = 23,
    [24] = 24,
    [25] = 25,
    [26] = 26,
    [27] = 27,
    [28] = 28,
    [29] = 29,
    [3] = 3,
    [30] = 30,
    [31] = 31,
    [32] = 32,
    [33] = 33,
    [34] = 34,
    [35] = 35,
    [36] = 36,
    [37] = 37,
    [38] = 38,
    [39] = 39,
    [4] = 4,
    [40] = 40,
    [41] = 41,
    [42] = 42,
    [43] = 43,
    [44] = 44,
    [45] = 45,
    [46] = 46,
    [47] = 47,
    [48] = 48,
    [49] = 49,
    [5] = 5,
    [50] = 50,
    [51] = 51,
    [52] = 52,
    [53] = 53,
    [54] = 54,
    [55] = 55,
    [56] = 56,
    [57] = 57,
    [58] = 58,
    [59] = 59,
    [6] = 6,
    [60] = 60,
    [7] = 7,
    [8] = 8,
    [9] = 9,

}

-- metatable
local mt = { 
    __index = function(t, k) 
        assert(__key_map[k], "cannot find " .. k .. " in return_discount")
        if _lang ~= "cn" and _isExist  and t._lang_key_map[k] then
            return t._lang[t._lang_key_map[k]]
        end
        return t._raw[__key_map[k]]
    end
}

-- 
function return_discount.length()
    return #return_discount._data
end

-- 
function return_discount.hasKey(k)
    if __key_map[k] == nil then
        return false
    else
        return true
    end
end

--
function return_discount.indexOf(index)
    if index == nil or not return_discount._data[index] then
        return nil
    end
    if Lang.lang ~= "cn" and Lang.lang ~= _lang then 
        _lang = Lang.lang 
        if Lang.isFileExist("app/i18n/".. _lang .."/config/return_discount.lua") then _isExist =  true end
    end
    if _lang ~= "cn" and _isExist then
        local table = require( "app.i18n.".. _lang ..".config." .. "return_discount" )
        return setmetatable({_raw = return_discount._data[index], _lang=table._data[index], _lang_key_map=table.__key_map}, mt)
    end
    return setmetatable({_raw = return_discount._data[index]}, mt)
end

--
function return_discount.get(id)
    
    return return_discount.indexOf(__index_id[id])
        
end

--
function return_discount.set(id, key, value)
    local record = return_discount.get(id)
    if record then
        local keyIndex = __key_map[key]
        if keyIndex then
            record._raw[keyIndex] = value
        end
    end
end

--
function return_discount.index()
    return __index_id
end

return return_discount