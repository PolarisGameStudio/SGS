--auction_content_order

local _lang = "cn"
local _isExist = false
local _isBaseExist = false
local _isDataExist = false

-- key
local __key_map = {
  type = 1,    --物品类型-int 
  value = 2,    --物品类型值-int 
  order = 3,    --排序-int 

}

-- key type
local __key_type = {
  type = "int",    --物品类型-1 
  value = "int",    --物品类型值-2 
  order = "int",    --排序-3 

}


-- data
local auction_content_order = {
    version =  1,
    _data = {
        [1] = {7,1150,1,},
        [2] = {7,1250,2,},
        [3] = {7,1350,3,},
        [4] = {7,1450,4,},
        [5] = {7,1151,5,},
        [6] = {7,1251,6,},
        [7] = {7,1351,7,},
        [8] = {7,1451,8,},
        [9] = {7,130001,21,},
        [10] = {7,130002,22,},
        [11] = {7,130003,23,},
        [12] = {7,130004,24,},
        [13] = {14,201,25,},
        [14] = {14,202,26,},
        [15] = {14,203,27,},
        [16] = {14,204,28,},
        [17] = {7,140001,29,},
        [18] = {7,140002,30,},
        [19] = {7,140003,31,},
        [20] = {7,140004,32,},
        [21] = {1,101,33,},
        [22] = {1,103,34,},
        [23] = {1,201,35,},
        [24] = {1,203,36,},
        [25] = {1,301,37,},
        [26] = {1,303,38,},
        [27] = {1,401,39,},
        [28] = {1,403,40,},
        [29] = {6,27,41,},
        [30] = {6,26,42,},
        [31] = {6,25,43,},
        [32] = {6,24,44,},
        [33] = {6,23,45,},
        [34] = {11,1401,50,},
        [35] = {11,1402,51,},
        [36] = {11,1403,52,},
        [37] = {11,1404,53,},
        [38] = {11,1405,54,},
        [39] = {11,1406,55,},
        [40] = {11,1407,56,},
        [41] = {11,1408,57,},
        [42] = {11,1301,58,},
        [43] = {11,1303,59,},
        [44] = {11,1304,60,},
        [45] = {11,1308,61,},
        [46] = {11,1302,62,},
        [47] = {11,1309,63,},
        [48] = {11,1310,64,},
        [49] = {11,1311,65,},
        [50] = {11,1312,66,},
        [51] = {11,1305,67,},
        [52] = {11,1313,68,},
        [53] = {11,1314,69,},
        [54] = {11,1315,70,},
        [55] = {11,1316,71,},
        [56] = {11,1317,72,},
        [57] = {11,1318,73,},
        [58] = {11,1319,74,},
        [59] = {11,1202,101,},
        [60] = {11,1203,102,},
        [61] = {11,1204,103,},
        [62] = {11,1205,104,},
        [63] = {11,1207,105,},
        [64] = {11,1208,106,},
        [65] = {11,1209,107,},
        [66] = {11,1211,108,},
        [67] = {11,1212,109,},
        [68] = {11,1213,110,},
        [69] = {11,1214,111,},
        [70] = {11,1215,112,},
        [71] = {11,1216,113,},
        [72] = {11,1217,114,},
        [73] = {11,1218,115,},
        [74] = {11,1219,116,},
        [75] = {11,1220,117,},
        [76] = {11,1221,118,},
        [77] = {11,1222,119,},
        [78] = {11,1223,120,},
        [79] = {11,1224,121,},
        [80] = {11,1225,122,},
        [81] = {11,1226,123,},
        [82] = {11,1227,124,},
        [83] = {11,1101,201,},
        [84] = {11,1102,202,},
        [85] = {11,1103,203,},
        [86] = {11,1104,204,},
        [87] = {11,1105,205,},
        [88] = {11,1106,206,},
        [89] = {11,1107,207,},
        [90] = {11,1108,208,},
        [91] = {3,301,301,},
        [92] = {3,302,302,},
        [93] = {3,303,303,},
        [94] = {3,304,304,},
        [95] = {3,311,305,},
        [96] = {3,312,306,},
        [97] = {3,313,307,},
        [98] = {3,314,308,},
        [99] = {7,3301,309,},
        [100] = {7,3302,310,},
        [101] = {7,3303,311,},
        [102] = {7,3304,312,},
        [103] = {7,3311,313,},
        [104] = {7,3312,314,},
        [105] = {7,3313,315,},
        [106] = {7,3314,316,},
        [107] = {6,80,400,},
        [108] = {6,81,401,},
        [109] = {6,706,402,},
        [110] = {4,101,403,},
        [111] = {4,103,404,},
        [112] = {4,201,405,},
        [113] = {4,203,406,},
        [114] = {4,301,407,},
        [115] = {4,303,408,},
        [116] = {4,401,409,},
        [117] = {4,403,410,},
        [118] = {4,1,501,},
        [119] = {4,2,502,},
        [120] = {4,102,503,},
        [121] = {4,104,504,},
        [122] = {4,105,505,},
        [123] = {4,106,506,},
        [124] = {4,107,507,},
        [125] = {4,108,508,},
        [126] = {4,109,509,},
        [127] = {4,110,510,},
        [128] = {4,111,511,},
        [129] = {4,112,512,},
        [130] = {4,202,513,},
        [131] = {4,204,514,},
        [132] = {4,205,515,},
        [133] = {4,206,516,},
        [134] = {4,207,517,},
        [135] = {4,208,518,},
        [136] = {4,209,519,},
        [137] = {4,210,520,},
        [138] = {4,211,521,},
        [139] = {4,212,522,},
        [140] = {4,302,523,},
        [141] = {4,304,524,},
        [142] = {4,305,525,},
        [143] = {4,306,526,},
        [144] = {4,307,527,},
        [145] = {4,308,528,},
        [146] = {4,309,529,},
        [147] = {4,310,530,},
        [148] = {4,311,531,},
        [149] = {4,312,532,},
        [150] = {4,402,533,},
        [151] = {4,404,534,},
        [152] = {4,405,535,},
        [153] = {4,406,536,},
        [154] = {4,407,537,},
        [155] = {4,408,538,},
        [156] = {4,409,539,},
        [157] = {4,410,540,},
        [158] = {4,411,541,},
        [159] = {4,412,542,},
        [160] = {4,150,543,},
        [161] = {4,250,544,},
        [162] = {4,350,545,},
        [163] = {4,450,546,},
        [164] = {6,44,600,},
        [165] = {6,43,601,},
        [166] = {6,41,602,},
        [167] = {6,42,603,},
        [168] = {6,92,604,},
        [169] = {6,93,605,},
        [170] = {6,555,606,},
        [171] = {6,556,607,},
        [172] = {6,500,650,},
        [173] = {6,501,651,},
        [174] = {6,502,652,},
        [175] = {6,503,653,},
        [176] = {6,504,654,},
        [177] = {6,510,655,},
        [178] = {6,511,656,},
        [179] = {6,512,657,},
        [180] = {6,513,658,},
        [181] = {6,514,659,},
        [182] = {6,530,660,},
        [183] = {6,531,661,},
        [184] = {6,532,662,},
        [185] = {6,533,663,},
        [186] = {6,534,664,},
        [187] = {6,701,665,},
        [188] = {6,702,666,},
        [189] = {6,703,667,},
        [190] = {6,704,668,},
        [191] = {6,721,669,},
        [192] = {6,722,670,},
        [193] = {7,1101,701,},
        [194] = {7,1103,702,},
        [195] = {7,1201,703,},
        [196] = {7,1203,704,},
        [197] = {7,1301,705,},
        [198] = {7,1303,706,},
        [199] = {7,1401,707,},
        [200] = {7,1403,708,},
        [201] = {13,101,801,},
        [202] = {13,102,802,},
        [203] = {13,103,803,},
        [204] = {13,104,804,},
        [205] = {14,101,901,},
        [206] = {14,102,902,},
        [207] = {14,103,903,},
        [208] = {14,104,904,},
    }
}

-- index
local __index_type_value = {
    ["11_1101"] = 83,
    ["11_1102"] = 84,
    ["11_1103"] = 85,
    ["11_1104"] = 86,
    ["11_1105"] = 87,
    ["11_1106"] = 88,
    ["11_1107"] = 89,
    ["11_1108"] = 90,
    ["11_1202"] = 59,
    ["11_1203"] = 60,
    ["11_1204"] = 61,
    ["11_1205"] = 62,
    ["11_1207"] = 63,
    ["11_1208"] = 64,
    ["11_1209"] = 65,
    ["11_1211"] = 66,
    ["11_1212"] = 67,
    ["11_1213"] = 68,
    ["11_1214"] = 69,
    ["11_1215"] = 70,
    ["11_1216"] = 71,
    ["11_1217"] = 72,
    ["11_1218"] = 73,
    ["11_1219"] = 74,
    ["11_1220"] = 75,
    ["11_1221"] = 76,
    ["11_1222"] = 77,
    ["11_1223"] = 78,
    ["11_1224"] = 79,
    ["11_1225"] = 80,
    ["11_1226"] = 81,
    ["11_1227"] = 82,
    ["11_1301"] = 42,
    ["11_1302"] = 46,
    ["11_1303"] = 43,
    ["11_1304"] = 44,
    ["11_1305"] = 51,
    ["11_1308"] = 45,
    ["11_1309"] = 47,
    ["11_1310"] = 48,
    ["11_1311"] = 49,
    ["11_1312"] = 50,
    ["11_1313"] = 52,
    ["11_1314"] = 53,
    ["11_1315"] = 54,
    ["11_1316"] = 55,
    ["11_1317"] = 56,
    ["11_1318"] = 57,
    ["11_1319"] = 58,
    ["11_1401"] = 34,
    ["11_1402"] = 35,
    ["11_1403"] = 36,
    ["11_1404"] = 37,
    ["11_1405"] = 38,
    ["11_1406"] = 39,
    ["11_1407"] = 40,
    ["11_1408"] = 41,
    ["13_101"] = 201,
    ["13_102"] = 202,
    ["13_103"] = 203,
    ["13_104"] = 204,
    ["14_101"] = 205,
    ["14_102"] = 206,
    ["14_103"] = 207,
    ["14_104"] = 208,
    ["14_201"] = 13,
    ["14_202"] = 14,
    ["14_203"] = 15,
    ["14_204"] = 16,
    ["1_101"] = 21,
    ["1_103"] = 22,
    ["1_201"] = 23,
    ["1_203"] = 24,
    ["1_301"] = 25,
    ["1_303"] = 26,
    ["1_401"] = 27,
    ["1_403"] = 28,
    ["3_301"] = 91,
    ["3_302"] = 92,
    ["3_303"] = 93,
    ["3_304"] = 94,
    ["3_311"] = 95,
    ["3_312"] = 96,
    ["3_313"] = 97,
    ["3_314"] = 98,
    ["4_1"] = 118,
    ["4_101"] = 110,
    ["4_102"] = 120,
    ["4_103"] = 111,
    ["4_104"] = 121,
    ["4_105"] = 122,
    ["4_106"] = 123,
    ["4_107"] = 124,
    ["4_108"] = 125,
    ["4_109"] = 126,
    ["4_110"] = 127,
    ["4_111"] = 128,
    ["4_112"] = 129,
    ["4_150"] = 160,
    ["4_2"] = 119,
    ["4_201"] = 112,
    ["4_202"] = 130,
    ["4_203"] = 113,
    ["4_204"] = 131,
    ["4_205"] = 132,
    ["4_206"] = 133,
    ["4_207"] = 134,
    ["4_208"] = 135,
    ["4_209"] = 136,
    ["4_210"] = 137,
    ["4_211"] = 138,
    ["4_212"] = 139,
    ["4_250"] = 161,
    ["4_301"] = 114,
    ["4_302"] = 140,
    ["4_303"] = 115,
    ["4_304"] = 141,
    ["4_305"] = 142,
    ["4_306"] = 143,
    ["4_307"] = 144,
    ["4_308"] = 145,
    ["4_309"] = 146,
    ["4_310"] = 147,
    ["4_311"] = 148,
    ["4_312"] = 149,
    ["4_350"] = 162,
    ["4_401"] = 116,
    ["4_402"] = 150,
    ["4_403"] = 117,
    ["4_404"] = 151,
    ["4_405"] = 152,
    ["4_406"] = 153,
    ["4_407"] = 154,
    ["4_408"] = 155,
    ["4_409"] = 156,
    ["4_410"] = 157,
    ["4_411"] = 158,
    ["4_412"] = 159,
    ["4_450"] = 163,
    ["6_23"] = 33,
    ["6_24"] = 32,
    ["6_25"] = 31,
    ["6_26"] = 30,
    ["6_27"] = 29,
    ["6_41"] = 166,
    ["6_42"] = 167,
    ["6_43"] = 165,
    ["6_44"] = 164,
    ["6_500"] = 172,
    ["6_501"] = 173,
    ["6_502"] = 174,
    ["6_503"] = 175,
    ["6_504"] = 176,
    ["6_510"] = 177,
    ["6_511"] = 178,
    ["6_512"] = 179,
    ["6_513"] = 180,
    ["6_514"] = 181,
    ["6_530"] = 182,
    ["6_531"] = 183,
    ["6_532"] = 184,
    ["6_533"] = 185,
    ["6_534"] = 186,
    ["6_555"] = 170,
    ["6_556"] = 171,
    ["6_701"] = 187,
    ["6_702"] = 188,
    ["6_703"] = 189,
    ["6_704"] = 190,
    ["6_706"] = 109,
    ["6_721"] = 191,
    ["6_722"] = 192,
    ["6_80"] = 107,
    ["6_81"] = 108,
    ["6_92"] = 168,
    ["6_93"] = 169,
    ["7_1101"] = 193,
    ["7_1103"] = 194,
    ["7_1150"] = 1,
    ["7_1151"] = 5,
    ["7_1201"] = 195,
    ["7_1203"] = 196,
    ["7_1250"] = 2,
    ["7_1251"] = 6,
    ["7_130001"] = 9,
    ["7_130002"] = 10,
    ["7_130003"] = 11,
    ["7_130004"] = 12,
    ["7_1301"] = 197,
    ["7_1303"] = 198,
    ["7_1350"] = 3,
    ["7_1351"] = 7,
    ["7_140001"] = 17,
    ["7_140002"] = 18,
    ["7_140003"] = 19,
    ["7_140004"] = 20,
    ["7_1401"] = 199,
    ["7_1403"] = 200,
    ["7_1450"] = 4,
    ["7_1451"] = 8,
    ["7_3301"] = 99,
    ["7_3302"] = 100,
    ["7_3303"] = 101,
    ["7_3304"] = 102,
    ["7_3311"] = 103,
    ["7_3312"] = 104,
    ["7_3313"] = 105,
    ["7_3314"] = 106,

}

-- index mainkey map
local __main_key_map = {
    [83] = "11_1101",
    [84] = "11_1102",
    [85] = "11_1103",
    [86] = "11_1104",
    [87] = "11_1105",
    [88] = "11_1106",
    [89] = "11_1107",
    [90] = "11_1108",
    [59] = "11_1202",
    [60] = "11_1203",
    [61] = "11_1204",
    [62] = "11_1205",
    [63] = "11_1207",
    [64] = "11_1208",
    [65] = "11_1209",
    [66] = "11_1211",
    [67] = "11_1212",
    [68] = "11_1213",
    [69] = "11_1214",
    [70] = "11_1215",
    [71] = "11_1216",
    [72] = "11_1217",
    [73] = "11_1218",
    [74] = "11_1219",
    [75] = "11_1220",
    [76] = "11_1221",
    [77] = "11_1222",
    [78] = "11_1223",
    [79] = "11_1224",
    [80] = "11_1225",
    [81] = "11_1226",
    [82] = "11_1227",
    [42] = "11_1301",
    [46] = "11_1302",
    [43] = "11_1303",
    [44] = "11_1304",
    [51] = "11_1305",
    [45] = "11_1308",
    [47] = "11_1309",
    [48] = "11_1310",
    [49] = "11_1311",
    [50] = "11_1312",
    [52] = "11_1313",
    [53] = "11_1314",
    [54] = "11_1315",
    [55] = "11_1316",
    [56] = "11_1317",
    [57] = "11_1318",
    [58] = "11_1319",
    [34] = "11_1401",
    [35] = "11_1402",
    [36] = "11_1403",
    [37] = "11_1404",
    [38] = "11_1405",
    [39] = "11_1406",
    [40] = "11_1407",
    [41] = "11_1408",
    [201] = "13_101",
    [202] = "13_102",
    [203] = "13_103",
    [204] = "13_104",
    [205] = "14_101",
    [206] = "14_102",
    [207] = "14_103",
    [208] = "14_104",
    [13] = "14_201",
    [14] = "14_202",
    [15] = "14_203",
    [16] = "14_204",
    [21] = "1_101",
    [22] = "1_103",
    [23] = "1_201",
    [24] = "1_203",
    [25] = "1_301",
    [26] = "1_303",
    [27] = "1_401",
    [28] = "1_403",
    [91] = "3_301",
    [92] = "3_302",
    [93] = "3_303",
    [94] = "3_304",
    [95] = "3_311",
    [96] = "3_312",
    [97] = "3_313",
    [98] = "3_314",
    [118] = "4_1",
    [110] = "4_101",
    [120] = "4_102",
    [111] = "4_103",
    [121] = "4_104",
    [122] = "4_105",
    [123] = "4_106",
    [124] = "4_107",
    [125] = "4_108",
    [126] = "4_109",
    [127] = "4_110",
    [128] = "4_111",
    [129] = "4_112",
    [160] = "4_150",
    [119] = "4_2",
    [112] = "4_201",
    [130] = "4_202",
    [113] = "4_203",
    [131] = "4_204",
    [132] = "4_205",
    [133] = "4_206",
    [134] = "4_207",
    [135] = "4_208",
    [136] = "4_209",
    [137] = "4_210",
    [138] = "4_211",
    [139] = "4_212",
    [161] = "4_250",
    [114] = "4_301",
    [140] = "4_302",
    [115] = "4_303",
    [141] = "4_304",
    [142] = "4_305",
    [143] = "4_306",
    [144] = "4_307",
    [145] = "4_308",
    [146] = "4_309",
    [147] = "4_310",
    [148] = "4_311",
    [149] = "4_312",
    [162] = "4_350",
    [116] = "4_401",
    [150] = "4_402",
    [117] = "4_403",
    [151] = "4_404",
    [152] = "4_405",
    [153] = "4_406",
    [154] = "4_407",
    [155] = "4_408",
    [156] = "4_409",
    [157] = "4_410",
    [158] = "4_411",
    [159] = "4_412",
    [163] = "4_450",
    [33] = "6_23",
    [32] = "6_24",
    [31] = "6_25",
    [30] = "6_26",
    [29] = "6_27",
    [166] = "6_41",
    [167] = "6_42",
    [165] = "6_43",
    [164] = "6_44",
    [172] = "6_500",
    [173] = "6_501",
    [174] = "6_502",
    [175] = "6_503",
    [176] = "6_504",
    [177] = "6_510",
    [178] = "6_511",
    [179] = "6_512",
    [180] = "6_513",
    [181] = "6_514",
    [182] = "6_530",
    [183] = "6_531",
    [184] = "6_532",
    [185] = "6_533",
    [186] = "6_534",
    [170] = "6_555",
    [171] = "6_556",
    [187] = "6_701",
    [188] = "6_702",
    [189] = "6_703",
    [190] = "6_704",
    [109] = "6_706",
    [191] = "6_721",
    [192] = "6_722",
    [107] = "6_80",
    [108] = "6_81",
    [168] = "6_92",
    [169] = "6_93",
    [193] = "7_1101",
    [194] = "7_1103",
    [1] = "7_1150",
    [5] = "7_1151",
    [195] = "7_1201",
    [196] = "7_1203",
    [2] = "7_1250",
    [6] = "7_1251",
    [9] = "7_130001",
    [10] = "7_130002",
    [11] = "7_130003",
    [12] = "7_130004",
    [197] = "7_1301",
    [198] = "7_1303",
    [3] = "7_1350",
    [7] = "7_1351",
    [17] = "7_140001",
    [18] = "7_140002",
    [19] = "7_140003",
    [20] = "7_140004",
    [199] = "7_1401",
    [200] = "7_1403",
    [4] = "7_1450",
    [8] = "7_1451",
    [99] = "7_3301",
    [100] = "7_3302",
    [101] = "7_3303",
    [102] = "7_3304",
    [103] = "7_3311",
    [104] = "7_3312",
    [105] = "7_3313",
    [106] = "7_3314",

}

-- metatable
local mt = { 
    __index = function(t, k) 
        local key_map = t._raw_key_map
        assert(key_map[k], "cannot find " .. k .. " in auction_content_order")
        if _lang ~= "cn" and _isDataExist  and t._data_key_map[k] then
            return t._data[t._data_key_map[k]]
        end
        if _lang ~= "cn" and _isExist  and t._lang_key_map[k] then
            return t._lang[t._lang_key_map[k]]
        end
        return t._raw[key_map[k]]
    end
}

-- 
function auction_content_order.length()
    return #auction_content_order._data
end

-- 
function auction_content_order.hasKey(k)
    if __key_map[k] == nil then
        return false
    else
        return true
    end
end

--
function auction_content_order.isVersionValid(v)
    if auction_content_order.version then
        if v then
            return auction_content_order.version <= v
        else
            return false
        end
    else
        return true
    end
end

--
function auction_content_order.indexOf(index)
    if index == nil or not auction_content_order._data[index] then
        return nil
    end
    if Lang.lang ~= _lang then 
        _lang = Lang.lang
        if Lang.lang ~= "cn" then
            _isDataExist = Lang.isFileExist("app/i18n/".. _lang .."/data/auction_content_order.lua")
            _isExist = Lang.isFileExist("app/i18n/".. _lang .."/config/auction_content_order.lua")
            _isBaseExist =  Lang.isFileExist("app/i18n/".. _lang .."/base/auction_content_order.lua")

            if _isDataExist then
                local table = require( "app.i18n.".. _lang ..".data." .. "auction_content_order" )
                _isDataExist = auction_content_order.isVersionValid(table.version)
            end
            if _isBaseExist then
                local table = require( "app.i18n.".. _lang ..".base." .. "auction_content_order" )
                _isBaseExist = auction_content_order.isVersionValid(table.version)
            end
            if _isExist then
                local table = require( "app.i18n.".. _lang ..".config." .. "auction_content_order" )
                _isExist = auction_content_order.isVersionValid(table.version)
            end
        end
    end
    local config = {_raw = nil,_raw_key_map = __key_map,_lang = nil,_lang_key_map = nil,_data = nil,_data_key_map = nil}
    if _lang ~= "cn" and _isDataExist then
        local table = require( "app.i18n.".. _lang ..".data." .. "auction_content_order" )
        local main_key = __main_key_map[index]
		local index_key = "__index_type_value"
        local data_index = table[index_key][main_key]
        config._data = table._data[data_index]
        config._data_key_map = table.__key_map
    end

    if _lang ~= "cn" and _isExist then
        local table = require( "app.i18n.".. _lang ..".config." .. "auction_content_order" )
        local main_key = __main_key_map[index]
		local index_key = "__index_type_value"
        local lang_index = table[index_key][main_key]
        config._lang = table._data[lang_index]
        config._lang_key_map = table.__key_map
    end
    config._raw = auction_content_order._data[index]
    if _lang ~= "cn" and _isBaseExist then
        local table_base = require( "app.i18n.".. _lang ..".base." .. "auction_content_order" )
        config._raw = table_base._data[index] 
    end
    return setmetatable(config, mt)
end

--
function auction_content_order.get(type,value)
    
    local k = type .. '_' .. value
    return auction_content_order.indexOf(__index_type_value[k])
        
end

--
function auction_content_order.set(type,value, key, value)
    local record = auction_content_order.get(type,value)
    if record then
        if _lang ~= "cn" and _isDataExist then
            local keyIndex =  record._data_key_map[key]
            if keyIndex then
                record._data[keyIndex] = value
                return
            end
        end
        if _lang ~= "cn" and _isExist then
            local keyIndex =  record._lang_key_map[key]
            if keyIndex then
                record._lang[keyIndex] = value
                return
            end
        end
        local keyIndex = record._raw_key_map[key]
        if keyIndex then
            record._raw[keyIndex] = value
        end
    end
end

--
function auction_content_order.index()
    return __index_type_value
end

return auction_content_order